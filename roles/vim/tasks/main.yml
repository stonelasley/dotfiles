---
- name: link neovim config
  file: src={{ ansible_env.PWD }}/nvim/
        path=~/.config/nvim
        state=link
        force=yes

- name: test neovim cloned
  stat:
    path: /tmp/neovim
  register: neovim

    #- name: clone neovim
    #  git:
    #    repo: https://github.com/neovim/neovim
    #    dest: /tmp/neovim/
    #    force: yes
    #    version: release-0.5
    #  when: not neovim.stat.exists
    #
    #- name: update neovim latest
    #  shell: 
    #  args:
    #    cmd: git checkout . && git pull
    #    chdir: /tmp/neovim
    #
    #- name: build neovim
    #  shell: 
    #  args:
    #    cmd: make CMAKE_BUILD_TYPE=Release --jobs=4 --silent
    #    chdir: /tmp/neovim
    #
    #- name: build neovim
    #  shell: 
    #  args:
    #    cmd: make install
    #    chdir: /tmp/neovim
    #  become: yes

- name: clone packer
  git:
    repo: https://github.com/wbthomason/packer.nvim
    dest: ~/.local/share/nvim/site/pack/packer/start/packer.nvim
    depth: 1
    force: yes

- name: test omnisharp installed
  stat:
    path: /opt/omnisharp/run
  register: omnisharp

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /opt/omnisharp
    state: directory
    mode: '0755'
  when: not omnisharp.stat.exists 
  become: yes

- name: download and install omnisharp
  ansible.builtin.unarchive:
    src: https://github.com/OmniSharp/omnisharp-roslyn/releases/download/{{omnisharp_version}}/omnisharp-osx.zip
    dest: /opt/omnisharp
    remote_src: yes
    mode: u+x
  when: not omnisharp.stat.exists and ansible_distribution == 'MacOSX'
  become: yes

- name: download and install omnisharp
  ansible.builtin.unarchive:
    src: https://github.com/OmniSharp/omnisharp-roslyn/releases/download/{{omnisharp_version}}/omnisharp-linux-x64.zip
    dest: /opt/omnisharp
    remote_src: yes
    mode: u+x
  when: not omnisharp.stat.exists and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  become: yes

- name: Fix Omnisharp permissions
  file: 
    path: /opt/omnisharp/run
    mode: u+x
  become: yes

- name: Dequarantine omnisharp
  shell: 
  args:
    cmd: find /opt/omnisharp | xargs xattr -r -d com.apple.quarantine
  when: not omnisharp.stat.exists and ansible_distribution == 'MacOSX'

- name: clone Lua language Server
  git:
    repo: https://github.com/sumneko/lua-language-server
    dest: /tmp/sumneko
    depth: 1
    recursive: yes
    track_submodules: yes
    force: yes

- name: Fix Sumneko install permissions
  file: 
    path: /tmp/sumneko/3rd/luamake/compile/install.sh
    mode: u+x

- name: compile Lua Language Server
  shell: ./install.sh
  args:
    chdir: /tmp/sumneko/3rd/luamake/compile/

- name: build Lua Language Server
  shell: ./luamake rebuild
  args:
    chdir: /tmp/sumneko/3rd/luamake
